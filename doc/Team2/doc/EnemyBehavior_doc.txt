Enemy Behaviour - Josh Dotson

Implements a simple easy to use framwork for defining predetermined enemy behaviours. This is not AI, and it more to define the 
strategic nature of certain ships.

class EnemyBehaviour - stores a list of enemy actions that when looped inside an enemy's update function, produces a smooth,
looping predetermined behaviour pattern that define each enemies personality if you will. This class contains and series of constructors. 
Default simply initializes the standardBehaviourCycle, List<Action> takes a list and copies it into  standardBehaviourCycle, and the copy
constructor takes by value another instance of EnemyBehaviour and sets *this equal to it. EnemyBehaviour implements IEnumerable, allowing it
to be easily iterated through using IEnumerator, or a simple foreach loop.

class EnemyAction - stores one interval of a bigger cycle that makes up a full behavior pattern. Defines where a enemy should move that
cycle as well as how fast and whether or not it should be attacking something. Constructors here are similar to EnemyBehaviour in functionality

XIEnemyBehaviors - Defines a predetermined static list of behaviors that are configured with certain enemy types in mind. An enemy can quickly
define it's behaviour by simply setting its behavior_m equal to a static member of this class.